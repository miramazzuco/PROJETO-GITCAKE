<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>